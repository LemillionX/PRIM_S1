import solver_v2 as slv
import numpy as np
import viz as viz
import matplotlib.pyplot as plt
import os
from tqdm import tqdm


##############################################################
#               General settings
##############################################################

SIZE_X = 18          # number of elements in the x-axis
SIZE_Y = 18          # number of elements in the y-axis
TIMESTEP = 0.025
N_FRAMES = 300     # number of frames to draw
GRID_MIN = -1
GRID_MAX = 1
D = (GRID_MAX-GRID_MIN)/SIZE_X

## Scalar field settings
K_DIFF = 0.0   #diffusion constant
ALPHA = 0.0       #dissipation rate

## Velocitity fiels settings
VISC = 0.0
VORTEX_RADIUS = 0.5*(GRID_MAX - GRID_MIN)/2.0
VORTEX_CENTER = np.array([GRID_MIN + D*(int(SIZE_X/2) + 0.5), GRID_MIN + D*(int(SIZE_Y/2)+0.5)  ])
#################################################################
# Initialisation
#################################################################
# Setup grids
COORDS_X = []   # x-coordinates of position
COORDS_Y = []   # y-coordinates of position
u_init = []     # x-coordinates of speed
v_init = []     # y-coordinates of speed
density_init = []    # density field
for j in range(SIZE_Y):
    for i in range(SIZE_X):
        point_x = GRID_MIN+(i+0.5)*D
        point_y = GRID_MIN+(j+0.5)*D
        COORDS_X.append(point_x)
        COORDS_Y.append(point_y)
        r = np.linalg.norm( np.array([point_x, point_y]) - VORTEX_CENTER )
        if r < VORTEX_RADIUS:
            u_init.append(10*point_y)
            v_init.append(-10*point_x)
            density_init.append(1.0)
        else:
            u_init.append(0)
            v_init.append(0)
            density_init.append(0.0)
        # v_init.append(np.sin(2*np.pi*point_x))

u_init=[0.00000000e+00,3.09818482e-19,5.78074481e-13,9.85572179e-11
,2.86279089e-09,6.49410083e-07,1.87214244e-09,1.15369232e-06
,3.79434787e-05,7.96284326e-07,2.79630444e-06,1.46159289e-06
,1.85579885e-10,3.95632138e-12,8.68301614e-17,0.00000000e+00
,-5.92773376e-17,3.17988348e-23,5.33014869e-19,1.84811981e-07
,3.10294763e-06,3.79229823e-05,1.81596828e-04,2.63980310e-03
,1.09063149e-04,1.88309210e-03,3.43807340e-02,4.28058440e-03
,6.72620907e-02,2.43674949e-01,3.31758952e-06,2.91185552e-06
,1.61737298e-05,6.43385283e-05,-1.79345761e-07,9.62088279e-14
,1.19611179e-12,3.51944686e-06,4.39373471e-05,4.14612121e-04
,2.07224535e-03,2.21349411e-02,1.01030630e-03,5.30304052e-02
,3.86340380e-01,1.70416147e-01,3.91662151e-01,1.23843241e+00
,9.71782878e-02,1.00302748e-01,1.44407332e-01,1.07089691e-01
,-4.08302657e-02,-1.87775659e-04,2.78364803e-10,5.06366414e-05
,4.67573671e-04,4.04478377e-03,5.22633977e-02,2.15629935e-01
,1.12439796e-01,4.12307143e-01,1.64240837e+00,1.93424034e+00
,1.78167272e+00,1.38915762e-01,6.31440282e-01,1.27415448e-01
,3.01235057e-02,-5.39954603e-01,-1.94501430e-01,-3.21587012e-03
,2.64412954e-08,4.88898135e-04,3.65533913e-03,3.34394276e-02
,4.28305387e-01,1.66958022e+00,1.52023041e+00,5.37141692e-04
,1.73466706e+00,2.53124261e+00,2.37425900e+00,-1.92065105e-01
,3.67777199e-02,5.00862956e-01,-4.99152541e-01,-1.77591109e+00
,-7.68919349e-01,-1.09556736e-02,1.11801501e-06,3.17199994e-03
,2.43592802e-02,1.93529755e-01,6.10466301e-01,2.05415010e+00
,3.22334361e+00,-1.73748541e+00,-3.61455232e-01,-2.23129451e-01
,-1.06316209e+00,-8.06521118e-01,1.51684475e+00,8.43285143e-01
,-1.66889697e-01,-7.11585522e-01,-1.09862976e-01,-4.99349437e-04
,1.99225869e-05,1.38006825e-02,1.02482498e-01,8.31351161e-01
,1.56540501e+00,-9.80129600e-01,2.69159023e-02,-8.06409478e-01
,-3.92851144e-01,-9.06319916e-01,-1.33018482e+00,-1.07598174e+00
,-1.28578210e+00,2.82485902e-01,-3.64935368e-01,-7.46491998e-02
,-1.53477713e-02,-2.61598307e-05,2.84722701e-05,1.59201361e-02
,-1.25035020e-02,2.81946093e-01,1.52799094e+00,-1.12744761e+00
,-4.46361035e-01,-4.54824656e-01,-4.55826759e-01,-8.64497602e-01
,-1.11639702e+00,-9.14001644e-01,-8.89867544e-01,-3.26800466e-01
,-1.14609337e+00,-2.93061614e-01,-1.41981915e-02,-2.24486339e-05
,6.62083630e-06,7.40064494e-03,-5.50351202e-01,-1.86137366e+00
,-2.05747175e+00,-5.76895297e-01,-7.17259273e-02,-3.95479947e-01
,-4.60944355e-01,-6.10856771e-01,-8.01412761e-01,-5.68700969e-01
,-7.09719181e-01,-1.23656001e-02,-1.08709693e+00,-2.93557435e-01
,-2.02354304e-02,-4.03437152e-05,9.72102043e-06,8.68685264e-03
,-1.41641366e+00,-1.31797767e+00,-5.27380586e-01,1.91792572e+00
,8.59276354e-01,-4.82488304e-01,-5.09594977e-01,-2.15275019e-01
,-4.42458838e-01,-1.54101178e-01,-7.50619590e-01,1.21719718e-01
,-6.97233915e-01,-2.32762918e-01,-3.05206943e-02,-8.84914771e-05
,1.75016015e-04,4.05082963e-02,-1.26693034e+00,2.74138935e-02
,4.15460253e+00,4.73807955e+00,3.79243112e+00,2.11962628e+00
,-6.06963821e-02,-5.48677705e-02,-1.52843267e-01,1.51395917e-01
,-7.45547712e-01,1.30225852e-01,-6.37598038e-01,-2.98460513e-01
,-4.77829017e-02,-2.03604781e-04,0.00000000e+00,-4.11063246e-02
,-7.67707884e-01,7.78214753e-01,2.13684297e+00,4.02432251e+00
,3.36812711e+00,2.15543580e+00,-4.45804060e-01,-5.94855607e-01
,1.06834948e-01,2.55947590e-01,-3.02605605e+00,-1.32479295e-02
,-1.42441988e+00,-6.41532540e-01,-3.60698402e-02,-4.62542012e-05
,-2.84799095e-15,-2.83436239e-01,-4.86612201e-01,1.36367872e-01
,8.18059921e-01,2.88661981e+00,4.43997860e+00,3.01267576e+00
,9.80267107e-01,-2.66785890e-01,3.98464262e-01,6.05109692e-01
,1.35519467e-02,-4.64242792e+00,-1.47418153e+00,-4.20860440e-01
,5.88793028e-03,-5.81719348e-07,-4.14176159e-11,-3.31029534e-01
,-1.80186123e-01,5.70535250e-02,1.30623293e+00,2.81081200e+00
,3.70206308e+00,3.83394718e+00,2.06134081e+00,-1.32122791e+00
,1.30178881e+00,1.74909484e+00,-7.01246929e+00,2.96742737e-01
,1.71370670e-01,-2.06412971e-02,3.40546644e-03,-1.29515634e-10
,4.43215176e-05,1.96132176e-02,1.63210277e-02,1.49618024e-02
,3.17787170e-01,1.90828657e+00,2.16026783e+00,1.64574647e+00
,3.00494820e-01,-4.09211922e+00,-1.29282475e+00,3.87631446e-01
,1.51252937e+00,2.84566569e+00,5.65966964e-01,8.00420996e-03
,6.24604756e-04,-3.54746679e-12,5.33078207e-07,6.02274667e-04
,6.20904088e-04,6.44459738e-04,2.46235635e-02,1.41093150e-01
,3.50672156e-01,3.95164639e-01,2.08841860e-01,-2.24726081e+00
,-3.41324687e+00,-8.11998695e-02,3.07115763e-01,6.71463668e-01
,1.57016497e-02,2.86611030e-03,1.93383778e-04,-6.05871386e-12
,7.95942565e-12,-1.07309188e-06,-7.32289209e-06,1.94317345e-05
,1.15913642e-03,1.14336470e-02,2.84499172e-02,8.00068211e-03
,-3.34884115e-02,-7.58004487e-01,-9.63279188e-01,-3.34764086e-02
,6.30262867e-02,1.04100436e-01,7.64551293e-03,6.66958571e-04
,3.64010739e-05,-6.99456812e-12,0.00000000e+00,-5.66395997e-13
,-5.50693727e-11,-3.51959861e-09,8.77237625e-08,5.74726300e-06
,2.61316618e-05,-3.71929127e-06,-1.78133458e-04,-1.05922110e-02
,-4.16908115e-02,8.58740241e-04,2.42098060e-04,2.49487583e-11
,6.69962617e-07,1.44402321e-08,5.12634275e-11,3.75217935e-18]

v_init= [0.00000000e+00,1.86092451e-19,3.47189996e-13,5.43748033e-11
,1.67657355e-09,4.07380838e-07,3.85621401e-09,6.89468607e-06
,8.46870989e-06,2.85507440e-07,1.29386945e-06,6.89915680e-07
,1.56970367e-10,1.76095402e-10,3.94618555e-13,0.00000000e+00
,5.33366916e-13,-2.86120249e-19,3.70938108e-19,1.22477019e-07
,1.89589355e-06,2.22917497e-05,1.18498916e-04,1.92978617e-03
,1.30194254e-04,8.22289009e-03,8.79830215e-03,1.56289630e-03
,6.13117255e-02,2.44689167e-01,2.82930443e-04,1.03277183e-04
,1.93151368e-06,-2.37637096e-06,2.25123631e-06,-1.20762124e-12
,8.32553156e-13,2.52695668e-06,2.96188427e-05,2.59017339e-04
,1.40051730e-03,1.64799746e-02,4.31591691e-03,1.05251372e-01
,7.72110894e-02,4.32771305e-03,3.25066328e-01,2.16551089e+00
,-1.03624806e-01,-1.40602440e-01,-4.78639938e-02,-1.49511592e-02
,-1.06554991e-02,-5.92430297e-05,2.16707499e-10,3.99998171e-05
,3.65127926e-04,2.94325710e-03,3.55543308e-02,1.66631356e-01
,5.27365357e-02,1.28999794e+00,1.51664114e+00,9.73425746e-01
,2.21740022e-01,2.72681212e+00,-6.44524023e-02,-7.08824217e-01
,-1.52957484e-01,-3.40659916e-01,-8.17349404e-02,-1.60261255e-03
,2.20267253e-08,4.12461057e-04,3.15268058e-03,2.80270558e-02
,4.08319563e-01,1.24713492e+00,5.16386986e-01,2.17651391e+00
,3.26638722e+00,2.06130052e+00,1.02026343e+00,-2.33056998e+00
,-6.22544825e-01,-1.24585390e+00,-2.67060101e-01,2.83919694e-03
,-1.22346260e-01,-4.63916548e-03,1.10341841e-06,3.11024021e-03
,2.35739239e-02,1.66656211e-01,7.20240831e-01,2.17920780e+00
,1.85382354e+00,1.78850937e+00,3.29743052e+00,2.34983516e+00
,2.52709866e-01,-3.31283450e-01,-7.12257290e+00,-1.47063541e+00
,-5.97305834e-01,1.05326563e-01,-1.71550107e-03,-1.46254300e-04
,2.33827559e-05,1.61082409e-02,1.11267261e-01,6.30877972e-01
,3.98211986e-01,1.20998776e+00,3.35428214e+00,1.49584556e+00
,1.59964216e+00,3.51856381e-01,-5.75303674e-01,-7.42386520e-01
,-1.87937510e+00,-1.98642349e+00,-1.05372798e+00,-1.31424204e-01
,-1.90859474e-02,-3.04621572e-05,7.28783925e-05,3.54951546e-02
,9.40303504e-02,8.81504297e-01,7.90371358e-01,2.00205612e+00
,1.68677461e+00,9.73378360e-01,4.51548219e-01,-3.46990377e-01
,-9.06030416e-01,-1.19707811e+00,-2.14624834e+00,-3.11537123e+00
,-1.01610863e+00,-2.49805674e-01,-2.30677910e-02,-3.75735508e-05
,8.62483739e-06,9.85347573e-03,1.42315730e-01,1.13669299e-01
,1.16157919e-01,1.97831285e+00,8.81001532e-01,4.18936968e-01
,4.75792587e-02,-4.91497904e-01,-9.84779418e-01,-1.36659896e+00
,-2.46701002e+00,-3.28066063e+00,-5.86634934e-01,-1.91265106e-01
,-1.95481684e-02,-4.13906782e-05,2.19565504e-06,1.26232989e-02
,1.81193054e-01,2.00731349e+00,1.72883034e+00,9.76157665e-01
,-1.62571669e-02,1.63395673e-01,-7.73170814e-02,-5.17269552e-01
,-9.90423381e-01,-1.37679541e+00,-3.10006928e+00,-3.32004404e+00
,-4.59542125e-01,-1.83692321e-01,-2.26144791e-02,-6.17031328e-05
,4.71400090e-05,7.84838721e-02,1.02294600e+00,2.60166144e+00
,-2.74407697e+00,-4.76378709e-01,1.35829533e-03,-1.41133085e-01
,-3.12828749e-01,-8.19853067e-01,-1.12911940e+00,-1.35955358e+00
,-4.38757086e+00,-3.58044434e+00,-7.23469734e-01,-2.66626686e-01
,-3.51470262e-02,-1.40250108e-04,0.00000000e+00,1.50670141e-01
,1.35776520e+00,2.05407977e+00,-1.13159692e+00,2.63670635e+00
,9.06276762e-01,1.31827608e-01,-7.60857821e-01,-1.78425658e+00
,-1.67311597e+00,-1.32607365e+00,-4.44541979e+00,-4.45795298e+00
,-6.30607128e-01,-3.42292219e-01,-1.02066301e-01,-3.54115647e-04
,4.27012212e-14,4.98698018e-02,1.00630724e+00,1.14461935e+00
,-7.20703602e-01,-4.35297632e+00,-3.90605390e-01,-1.53403568e+00
,-1.21588004e+00,-3.54133105e+00,-2.37489557e+00,-1.55917311e+00
,-4.44864225e+00,-4.88607407e+00,-3.13195258e-01,-5.16889989e-02
,-2.07860395e-02,-5.35135541e-06,8.53562554e-10,1.01615131e-01
,5.48239768e-01,8.40259120e-02,-1.02932549e+00,-1.68213582e+00
,-2.11377645e+00,-7.42585137e-02,-1.66219723e+00,-4.44662237e+00
,-3.58735442e+00,-1.50077391e+00,-1.37294912e+00,-2.07511258e+00
,-8.23981166e-01,-1.52178463e-02,-2.09640409e-03,-7.45311729e-11
,-1.78313043e-04,-7.93367773e-02,-1.99332520e-01,-9.52993706e-02
,-2.05186129e-01,-8.10542762e-01,-8.67409527e-01,-7.01298416e-01
,-1.65841031e+00,-4.10332966e+00,-3.92224336e+00,-1.38403046e+00
,-2.15970143e-03,-1.30822295e-02,-2.66624354e-02,-2.78149568e-03
,-2.03132178e-04,6.14386742e-13,-2.17055390e-06,-2.08159210e-03
,-8.18317849e-03,-5.88498637e-03,-1.88757703e-02,-4.32769693e-02
,-9.45087746e-02,-1.99103281e-01,-4.94521469e-01,-7.87080228e-01
,-2.64308619e+00,-9.58624184e-01,-3.53079140e-02,2.35693187e-01
,-7.74260843e-04,-1.07361563e-03,-1.02560443e-04,-1.62728446e-12
,-2.31518520e-11,-9.53462404e-06,-4.08103588e-05,-3.71344882e-04
,-2.18634168e-03,-5.79094142e-03,-7.97394849e-03,-1.21360635e-02
,-3.73510979e-02,-8.51601437e-02,-4.19033527e-01,-2.33928114e-01
,-3.23015004e-02,3.39374482e-03,-2.21116398e-03,-3.38931946e-04
,-2.43688119e-05,4.26910873e-15,0.00000000e+00,-4.63826026e-12
,-1.41524487e-10,-1.50188448e-08,-5.24588074e-07,-3.62318065e-06
,-6.41601719e-06,-1.21597650e-05,-1.21107798e-04,-1.73488306e-03
,-1.28884744e-02,-3.85345099e-03,-1.21599391e-04,-1.05106901e-09
,-5.38566667e-07,-1.24888730e-08,-5.24277427e-11,-2.29012223e-21]

laplace_mat = slv.build_laplacian_matrix(SIZE_X, SIZE_Y, 1/(D*D), -4/(D*D))
velocity_diff_mat = slv.build_laplacian_matrix(SIZE_X, SIZE_Y, -VISC*TIMESTEP/(D*D), 1+4*VISC*TIMESTEP/(D*D) )
scalar_diffuse_mat = slv.build_laplacian_matrix(SIZE_X, SIZE_Y, -K_DIFF*TIMESTEP/(D*D), 1+4*K_DIFF*TIMESTEP/(D*D) )

##############################################################
#               Plot initialisation 
##############################################################
x,y = np.meshgrid(COORDS_X[:SIZE_X], COORDS_Y[::SIZE_X])
fig, ax = plt.subplots(1, 1)
ax.set_aspect('equal', adjustable='box')
Q = ax.quiver(x, y, viz.tensorToGrid(u_init, SIZE_X, SIZE_Y), viz.tensorToGrid(v_init, SIZE_X, SIZE_Y), color='red', scale_units='width')


## Converting variables to tensors
velocity_field_x = np.array(u_init)
velocity_field_y = np.array(v_init)
density_field =density_init
dt = TIMESTEP

##############################################################
#               Plot Animation
#############################################################
OUTPUT_DIR = "output"
FOLDER_NAME = "testing_velocity"
DENSITY_NAME = "testing_density"
DIR_PATH = os.path.join(os.getcwd().rsplit("\\",1)[0], OUTPUT_DIR)
SAVE_PATH =  os.path.join(DIR_PATH, FOLDER_NAME)
FPS = 20
if not os.path.isdir(SAVE_PATH):
    os.mkdir(SAVE_PATH)
if not os.path.isdir(os.path.join(DIR_PATH, DENSITY_NAME)):
    os.mkdir(os.path.join(DIR_PATH, DENSITY_NAME))

print(SAVE_PATH)
pbar = tqdm(range(1, N_FRAMES+1), desc = "Simulating....")
plt.savefig(os.path.join(SAVE_PATH, '{:04d}'.format(0)))
viz.draw_density(viz.tensorToGrid(density_field, SIZE_X, SIZE_Y), os.path.join(DIR_PATH, DENSITY_NAME, '{:04d}.png'.format(0)))

for t in pbar:
    velocity_field_x, velocity_field_y, density_field = slv.update(velocity_field_x, velocity_field_y, density_field ,SIZE_X, SIZE_Y, COORDS_X, COORDS_Y, dt, GRID_MIN, D, laplace_mat, ALPHA, velocity_diff_mat, VISC, scalar_diffuse_mat, K_DIFF)
    # Viz update
    viz.draw_density(viz.tensorToGrid(density_field, SIZE_X, SIZE_Y), os.path.join(DIR_PATH, DENSITY_NAME, '{:04d}.png'.format(t)))
    u_viz = viz.tensorToGrid(velocity_field_x, SIZE_X, SIZE_Y)
    v_viz = viz.tensorToGrid(velocity_field_y, SIZE_X, SIZE_Y)
    Q.set_UVC(u_viz,v_viz)
    plt.savefig(os.path.join(SAVE_PATH, '{:04d}'.format(t)))

viz.frames2gif(os.path.join(DIR_PATH, FOLDER_NAME), os.path.join(DIR_PATH, FOLDER_NAME+".gif"), FPS)
viz.frames2gif(os.path.join(DIR_PATH, DENSITY_NAME), os.path.join(DIR_PATH, DENSITY_NAME+".gif"), FPS)