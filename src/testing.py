import tensorflow as tf
import tf_solver as slv
import numpy as np
import viz as viz
import matplotlib.pyplot as plt
import os
from tqdm import tqdm


##############################################################
#               General settings
##############################################################

SIZE_X = 18          # number of elements in the x-axis
SIZE_Y = 18          # number of elements in the y-axis
TIMESTEP = 0.025
N_FRAMES = 300     # number of frames to draw
GRID_MIN = -1
GRID_MAX = 1
D = (GRID_MAX-GRID_MIN)/SIZE_X

## Scalar field settings
K_DIFF = 0.0   #diffusion constant
ALPHA = 0.0       #dissipation rate

## Velocitity fiels settings
VISC = 0.0
VORTEX_RADIUS = 0.5*(GRID_MAX - GRID_MIN)/2.0
VORTEX_CENTER = np.array([GRID_MIN + D*(int(SIZE_X/2) + 0.5), GRID_MIN + D*(int(SIZE_Y/2)+0.5)  ])
#################################################################
# Initialisation
#################################################################
# Setup grids
COORDS_X = []   # x-coordinates of position
COORDS_Y = []   # y-coordinates of position
u_init = []     # x-coordinates of speed
v_init = []     # y-coordinates of speed
density_init = []    # density field
for j in range(SIZE_Y):
    for i in range(SIZE_X):
        point_x = GRID_MIN+(i+0.5)*D
        point_y = GRID_MIN+(j+0.5)*D
        COORDS_X.append(point_x)
        COORDS_Y.append(point_y)
        r = np.linalg.norm( np.array([point_x, point_y]) - VORTEX_CENTER )
        if r < VORTEX_RADIUS:
            u_init.append(10*point_y)
            v_init.append(-10*point_x)
            density_init.append(1.0)
        else:
            u_init.append(0)
            v_init.append(0)
            density_init.append(0.0)
        # v_init.append(np.sin(2*np.pi*point_x))

u_init=[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 9.47299483e-08
, 5.25291807e-06, 8.47892661e-05, 4.29826003e-04, -1.55964750e-04
, 3.78993573e-03, 2.55947903e-04, 1.42967168e-04, 2.17368011e-04
, 1.95177142e-02, 3.63433704e-04, 5.74766251e-04, 3.85149382e-03
, 6.89348578e-03, 0.00000000e+00, 2.52015452e-04, 4.74922583e-02
, 9.11051780e-02, 1.56302199e-01, 1.82108626e-01, 1.88884571e-01
, 1.69920146e-01, 7.12005123e-02, 1.42556131e-01, -1.48632955e-02
, 2.30621472e-01, 4.45819385e-02, 4.06010658e-04, 1.50435835e-01
, 9.63221610e-01, 7.44734228e-01, 3.98870617e-01, -2.49112109e-08
, 3.52671341e-05, 1.74145550e-02, 1.03356034e-01, 1.67248189e-01
, 2.04475880e-01, 2.17441797e-01, 1.82404771e-01, 1.35591641e-01
, 2.42911987e-02, -1.70267537e-01, -4.91636433e-02, -8.58178258e-01
, -1.50024965e-01, 1.00429940e+00, 1.03368402e+00, 4.04358923e-01
, 2.39870220e-01, -8.95499397e-06, 1.17754907e-05, 1.00519070e-02
, 1.16988882e-01, 1.84802130e-01, 2.31365204e-01, 2.96327502e-01
, 3.82219762e-01, 3.68689477e-01, 5.09039402e-01, -2.28429232e-02
, 2.98154682e-01, 1.38565704e-01, -1.82667628e-01, 7.69476235e-01
, -6.87520027e-01, -1.01777025e-01, -2.57256255e-02, -1.57578569e-03
, 5.39068935e-07, -1.86716337e-02, 1.58598751e-01, 2.86657810e-01
, 5.29427528e-01, 8.01074505e-01, 9.99720871e-01, 7.79681444e-01
, 6.70978963e-01, 1.45575240e-01, 1.26869068e-01, -6.16523862e-01
, -1.60587177e-01, 8.33731890e-01, -9.66396093e-01, 3.89647149e-02
, -2.29105145e-01, -8.29290226e-03, 0.00000000e+00, -7.99270198e-02
, 9.15814117e-02, 2.26318955e-01, 2.78183490e-01, 2.81933486e-01
, 1.11402586e-01, -2.66993380e+00, -2.53236365e+00, -2.03104258e+00
, -1.56544960e+00, -1.39007545e+00, -1.29844144e-01, 6.51409030e-01
, -3.01750243e-01, 1.49206221e-01, -5.60414381e-02, -9.65966727e-04
, 0.00000000e+00, -1.66296259e-01, 9.86626893e-02, 9.48742684e-03
, -6.23316430e-02, -2.52512908e+00, -4.03292751e+00, -3.57574844e+00
, -3.17395520e+00, -2.76643181e+00, -2.11316013e+00, -1.10091579e+00
, -9.43166792e-01, 4.17891145e-01, -1.59877375e-01, 1.51458710e-01
, -5.61411045e-02, -6.15519704e-04, 9.23325505e-09, -1.69912994e-01
, -1.33672416e-01, -3.23422849e-02, -2.78187919e+00, -4.10222387e+00
, -2.85294080e+00, -2.55593419e+00, -2.29670334e+00, -1.95536351e+00
, -1.42255867e+00, -5.16318083e-01, -5.29927671e-01, 9.98858735e-02
, -3.16299610e-02, -3.01888883e-02, -1.72457863e-02, -1.86061894e-04
, -5.91757407e-06, -2.27021381e-01, -7.95218721e-02, -2.08109927e+00
, -3.47157383e+00, -1.64917207e+00, -1.43236995e+00, -1.45381558e+00
, -1.29117668e+00, -8.75447989e-01, -4.73494470e-01, -8.54757905e-04
, -1.44398212e-01, 4.38502967e-01, -5.12262821e-01, -3.29384267e-01
, -1.39143109e-01, -2.04361090e-03, -3.67849825e-05, -1.11227661e-01
, -1.54963362e+00, -2.07319117e+00, -1.45040572e+00, 8.83855402e-01
, 6.18194640e-01, 8.32281172e-01, 5.33495188e-01, 3.52937013e-01
, 7.41001815e-02, 3.21061641e-01, 3.42944741e-01, 2.77613342e-01
, -5.41641772e-01, -4.65079874e-01, -1.13498941e-01, -9.52476112e-04
, 2.80903012e-04, -8.03831041e-01, -1.24847770e+00, -5.28546691e-01
, 5.98368943e-01, 2.22252631e+00, 1.64154983e+00, 1.55732512e+00
, 1.03184068e+00, 6.95508718e-01, -1.41508412e-02, 2.25903615e-01
, 8.14658761e-01, -5.91815650e-01, -7.52998471e-01, -7.10740328e-01
, -8.76844302e-02, -4.26777173e-04, 7.43593728e-06, -6.82499766e-01
, -5.82619667e-01, 1.80995554e-01, 1.19577956e+00, 2.17247295e+00
, 1.57514501e+00, 1.53525102e+00, 1.08145392e+00, 4.46922839e-01
, -1.34454787e-01, -3.11077386e-01, 5.09400964e-01, -1.15434396e+00
, -9.59000766e-01, -5.57826281e-01, -2.93027163e-01, -1.07968003e-02
, -1.90304927e-05, -2.34612703e-01, 2.19552949e-01, 4.30599064e-01
, 7.97062099e-01, 7.58322716e-01, 2.83488131e+00, 3.06067920e+00
, 2.79591370e+00, 2.11130953e+00, 1.08121741e+00, -1.09805964e-01
, -4.63056475e-01, -2.08554983e+00, 2.42839098e-01, 2.78771460e-01
, -2.17127442e-01, -5.72182890e-03, -2.40616300e-05, 2.73667928e-03
, 5.62076509e-01, 8.35364342e-01, 9.42530215e-01, 4.12769526e-01
, 1.39924860e+00, 3.01463413e+00, 3.79497051e+00, 3.93047237e+00
, 3.64962077e+00, 2.86739159e+00, 1.01445663e+00, 1.37801778e+00
, 8.92409325e-01, 8.10793519e-01, -2.66659290e-01, -8.85329116e-03
, 5.35500294e-04, 1.46712521e-02, 4.97619003e-01, 5.60212672e-01
, 6.82120979e-01, 4.07435387e-01, -6.02944382e-02, -4.18370813e-01
, -4.78840083e-01, 4.28176904e-03, 5.95919430e-01, 8.09694111e-01
, 7.61775434e-01, 4.69122350e-01, 3.60577285e-01, 1.24176018e-01
, 8.45985711e-02, -2.48081051e-04, 4.61523701e-03, 1.95560932e-01
, 5.27405441e-01, 5.25572538e-01, 5.51897645e-01, 4.47827220e-01
, 8.31502974e-02, -2.17329085e-01, -2.40688369e-01, 5.59199043e-02
, 3.22763234e-01, 5.29908180e-01, 5.24991512e-01, 2.59392262e-01
, -1.29754409e-01, -3.45488250e-01, -1.00449659e-01, -7.39676703e-04
, 9.11772717e-03, 2.91627437e-01, 5.25389493e-01, 5.06057024e-01
, 4.93809551e-01, 4.00811404e-01, 2.29704261e-01, -2.61795390e-02
, -2.00481459e-01, -1.66923419e-01, -9.27101672e-02, -1.23447813e-02
, 5.28672300e-02, -3.68028320e-02, -5.98262325e-02, -1.21833339e-01
, -2.16664448e-02, 1.02147584e-04, 7.56562076e-06, 5.65045921e-04
, 1.28738128e-03, 1.31926057e-03, 2.12609628e-03, 6.60279766e-03
, 3.69271100e-03, 1.03130029e-03, -7.56087247e-05, -8.03893272e-05
, -2.08484398e-05, 1.35700730e-05, 1.39543111e-03, 1.44106033e-03
, 1.07355998e-03, -1.16302993e-03, 1.08319975e-03, 1.26656578e-05]

v_init=[0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 6.91595048e-08
, 1.23982190e-05, 2.88310170e-04, 1.07408455e-03, 1.41816179e-03
, 3.53722274e-03, 7.98798865e-04, 2.09177801e-06, 1.98239181e-03
, 4.46589589e-01, 1.64700730e-03, 1.95859291e-04, 1.24893477e-03
, 1.67522661e-03, 0.00000000e+00, 2.31178317e-04, -2.28551812e-02
, -3.27478573e-02, -2.27629486e-02, 3.88910878e-03, 4.72493321e-02
, 9.62042212e-02, 1.10963188e-01, 1.70818746e-01, 8.53729919e-02
, -2.39593927e-02, -4.23454076e-01, 1.47600937e+00, -1.00181508e+00
, -4.34009522e-01, 1.01724356e-01, 1.43179640e-01, 1.51171076e-08
, 4.03413560e-06, -1.41012847e-01, -1.06492206e-01, -1.01660214e-01
, -3.70239578e-02, 2.65700258e-02, 1.10917196e-01, 1.57007858e-01
, 5.67705184e-02, 1.72095686e-01, 1.82326540e-01, 1.15123242e-01
, -1.15697753e+00, -1.01974821e+00, 1.95061505e-01, 7.52321601e-01
, 6.90952003e-01, 9.46566171e-04, 2.20737093e-06, -2.12686256e-01
, -1.58984020e-01, -1.37810305e-01, -5.50889410e-02, 8.03462639e-02
, 1.57292247e-01, 1.88608125e-01, 3.28729361e-01, 2.89266855e-01
, 3.10116023e-01, 7.18024313e-01, -1.40319765e+00, -1.28592587e+00
, -1.26106724e-01, 8.18797708e-01, 7.62181580e-01, 8.99808481e-03
, 1.07931015e-07, -3.35394591e-01, -2.36031979e-01, -2.80007362e-01
, -1.55041695e-01, -1.95425585e-01, -1.02609908e-03, 4.39555645e-02
, 3.52523297e-01, 2.49256685e-01, 2.52151966e-01, -6.28597587e-02
, -1.70746768e+00, -1.17316592e+00, 5.10876298e-01, 4.94838566e-01
, 6.55309319e-01, 1.44504532e-02, 0.00000000e+00, -4.79388505e-01
, -4.07907277e-01, -3.77052695e-01, -5.55471897e-01, -4.06261766e-04
, 5.88324189e-01, 7.22766459e-01, 7.67870784e-01, 9.87157047e-01
, 8.60143185e-01, -2.18685195e-02, -3.04694724e+00, -1.16988385e+00
, 7.43574440e-01, 1.64516315e-01, 6.47651136e-01, 5.92984725e-03
, 0.00000000e+00, -5.82227170e-01, -3.27507079e-01, -6.73645377e-01
, -2.90618073e-02, 1.08906806e-05, 1.40272999e+00, 1.04504323e+00
, 2.86959440e-01, -2.12413013e-01, -8.80652487e-01, -1.26219821e+00
, -2.49577332e+00, -1.94581342e+00, 8.52454901e-01, 4.56387341e-01
, 5.85490942e-01, 2.48437142e-03, -1.87154328e-08, -6.77377522e-01
, -5.21533847e-01, -7.86626339e-02, 1.59645483e-01, 3.06675816e+00
, 2.37857580e+00, 1.36725724e+00, 5.60255051e-01, -2.74242103e-01
, -1.27101481e+00, -1.73812759e+00, -2.59347701e+00, -3.31202435e+00
, 9.15450513e-01, 6.57795012e-01, 4.83690292e-01, 1.14311953e-03
, -3.08714916e-05, -7.25784719e-01, 1.16250284e-01, 4.64805067e-01
, 2.35462666e+00, 3.83226538e+00, 1.57594430e+00, 7.81659067e-01
, 2.19742768e-02, -1.09850073e+00, -1.85883808e+00, -1.91168153e+00
, -2.72098351e+00, -3.40183806e+00, 1.06906223e+00, 8.33705902e-01
, 3.56734842e-01, 3.49215209e-03, 1.49197760e-04, -5.37519336e-01
, 5.69991887e-01, 1.75721502e+00, 2.91399193e+00, 2.21912479e+00
, 5.38039267e-01, -5.03190756e-01, -7.56776810e-01, -1.43006790e+00
, -2.01202273e+00, -1.87178481e+00, -2.71869659e+00, -3.30276489e+00
, 1.23071206e+00, 7.76284039e-01, 3.93687524e-02, -3.07031936e-04
, 2.30919616e-03, 4.04163241e-01, 1.27362442e+00, 1.95263696e+00
, 1.36721408e+00, -6.82701409e-01, 1.27369285e-01, 2.29455754e-01
, -3.34601849e-01, -1.11407936e+00, -1.90250337e+00, -1.94376040e+00
, -2.35890627e+00, -3.18706560e+00, 9.07968223e-01, 1.45793790e-02
, -4.67241496e-01, -6.28527207e-03, 1.83499663e-03, 1.07779419e+00
, 1.12143636e+00, 1.05211198e+00, -3.87743324e-01, 1.35334504e+00
, 1.51736701e+00, 9.86907303e-01, 4.01616901e-01, -5.29618077e-02
, -1.29400277e+00, -1.52264607e+00, -1.72377515e+00, -3.42552328e+00
, -2.06111863e-01, -5.15699625e-01, -5.48379600e-01, -1.61356945e-02
, 3.69432173e-03, 1.22069848e+00, 7.64486611e-01, 2.42408097e-01
, -4.84895557e-01, -1.35915840e+00, 1.27274764e+00, 1.08302391e+00
, 3.15062255e-01, -2.71139473e-01, -7.89902210e-01, -5.53609371e-01
, -1.45105636e+00, -7.43651152e-01, -1.12831187e+00, -6.24248207e-01
, -5.57646513e-01, -5.60563337e-03, 6.03986112e-03, 1.11186433e+00
, 4.45194930e-01, 1.64260253e-01, -1.77409440e-01, -1.03337073e+00
, -8.65151644e-01, 1.58487833e+00, 1.23753059e+00, 5.89634717e-01
, 9.59786922e-02, -2.39894673e-01, -1.28730386e-01, -6.79089844e-01
, -4.44949836e-01, -1.55222625e-01, -2.17523277e-01, -2.84736627e-03
, 1.10902721e-02, 8.39867949e-01, 1.29568100e-01, 4.17553186e-02
, -1.09174825e-01, -7.56511390e-01, -7.67496765e-01, -2.35130444e-01
, 2.15802178e-01, 2.68631548e-01, 3.17826450e-01, -1.91564113e-01
, -5.41729987e-01, -8.32343876e-01, -5.51384866e-01, 1.22714311e-01
, 3.90158705e-02, -7.54327849e-02, -1.23813987e-01, -3.28020513e-01
, -4.52247649e-01, -3.11781675e-01, 1.13382198e-01, 4.81638044e-01
, 5.99420190e-01, 5.59868813e-01, 2.06129402e-01, -1.97198182e-01
, -8.16159621e-02, 1.02154464e-02, 1.33065641e-01, 2.31806608e-03
, 6.57744426e-03, 1.83258027e-01, -5.33670187e-02, 3.34445946e-02
, 1.77111998e-02, -7.05682933e-02, -4.25080024e-02, 3.92097682e-02
, -2.37590760e-01, -1.72941804e-01, -1.87148452e-01, -9.41699669e-02
, -9.63086113e-02, -1.31113769e-03, 2.84771454e-06, 1.44033656e-05
, -2.95850215e-04, 4.90613820e-05, 4.86429126e-05, -4.32865578e-04
, 8.24803938e-05, 1.91457482e-04, 1.13129645e-05, 1.88443519e-05
, 8.47727551e-06, -2.77499232e-04, -6.71988493e-03, -3.10650561e-03
, -3.97546589e-03, -9.38763493e-04, -9.42260027e-04, -1.86527832e-05,
0,0,0,0,
0,0,0,0]

print(len(v_init))

laplace_mat =  tf.convert_to_tensor(slv.build_laplacian_matrix(SIZE_X, SIZE_Y, 1/(D*D), -4/(D*D)), dtype=tf.float32)
velocity_diff_mat = tf.convert_to_tensor(slv.build_laplacian_matrix(SIZE_X, SIZE_Y, -VISC*TIMESTEP/(D*D), 1+4*VISC*TIMESTEP/(D*D) ), dtype=tf.float32)
scalar_diffuse_mat = tf.convert_to_tensor(slv.build_laplacian_matrix(SIZE_X, SIZE_Y, -K_DIFF*TIMESTEP/(D*D), 1+4*K_DIFF*TIMESTEP/(D*D) ), dtype=tf.float32)

##############################################################
#               Plot initialisation 
##############################################################
x,y = np.meshgrid(COORDS_X[:SIZE_X], COORDS_Y[::SIZE_X])
fig, ax = plt.subplots(1, 1)
ax.set_aspect('equal', adjustable='box')
Q = ax.quiver(x, y, viz.tensorToGrid(u_init, SIZE_X, SIZE_Y), viz.tensorToGrid(v_init, SIZE_X, SIZE_Y), color='red', scale_units='width')


## Converting variables to tensors
velocity_field_x = tf.convert_to_tensor(u_init, dtype=tf.float32)
velocity_field_y = tf.convert_to_tensor(v_init, dtype=tf.float32)
density_field = tf.convert_to_tensor(density_init, dtype=tf.float32)
dt = tf.convert_to_tensor(TIMESTEP, dtype=tf.float32)
COORDS_X = tf.convert_to_tensor(COORDS_X, dtype=tf.float32)
COORDS_Y = tf.convert_to_tensor(COORDS_Y, dtype=tf.float32)


##############################################################
#               Plot Animation
#############################################################
OUTPUT_DIR = "output"
FOLDER_NAME = "testing_velocity"
DENSITY_NAME = "testing_density"
DIR_PATH = os.path.join(os.getcwd().rsplit("\\",1)[0], OUTPUT_DIR)
SAVE_PATH =  os.path.join(DIR_PATH, FOLDER_NAME)
FPS = 20
if not os.path.isdir(SAVE_PATH):
    os.mkdir(SAVE_PATH)
if not os.path.isdir(os.path.join(DIR_PATH, DENSITY_NAME)):
    os.mkdir(os.path.join(DIR_PATH, DENSITY_NAME))

print(SAVE_PATH)
pbar = tqdm(range(1, N_FRAMES+1), desc = "Simulating....")
plt.savefig(os.path.join(SAVE_PATH, '{:04d}'.format(0)))
viz.draw_density(viz.tensorToGrid(density_field, SIZE_X, SIZE_Y), os.path.join(DIR_PATH, DENSITY_NAME, '{:04d}.png'.format(0)))

for t in pbar:
    velocity_field_x, velocity_field_y, density_field = slv.update(velocity_field_x, velocity_field_y, density_field ,SIZE_X, SIZE_Y, COORDS_X, COORDS_Y, dt, GRID_MIN, D, laplace_mat, ALPHA, velocity_diff_mat, VISC, scalar_diffuse_mat, K_DIFF)
    # Viz update
    viz.draw_density(tf.reshape(density_field, shape=(SIZE_X, SIZE_Y)).numpy(), os.path.join(DIR_PATH, DENSITY_NAME, '{:04d}.png'.format(t)))
    u_viz = tf.reshape(velocity_field_x, shape=(SIZE_X, SIZE_Y)).numpy()
    v_viz = tf.reshape(velocity_field_y, shape=(SIZE_X, SIZE_Y)).numpy()
    Q.set_UVC(u_viz,v_viz)
    plt.savefig(os.path.join(SAVE_PATH, '{:04d}'.format(t)))

viz.frames2gif(os.path.join(DIR_PATH, FOLDER_NAME), os.path.join(DIR_PATH, FOLDER_NAME+".gif"), FPS)
viz.frames2gif(os.path.join(DIR_PATH, DENSITY_NAME), os.path.join(DIR_PATH, DENSITY_NAME+".gif"), FPS)